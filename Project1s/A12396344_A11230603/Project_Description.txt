For our project, we decided to break the section up by rules and their definitions. For all the generic keywords, such as â€œuniform, we immediately returned that token from scanner.h. We also checked for all operators and returned that token.

In our definition sections, we checked for specific patterns that would need to be scanned first, such as comment, ints, floats, identifiers, etc. Then in our rules section, the definition would go lead to the rule, and there would be code checking for proper conditions and returning the proper token. 

We expect the program to read in input and output the correct token and the data associated with it. There will be errors thrown if incorrect text is scanned or if there is a sequence of text that does not match a proper input. 

This program will be robust and effective. Besides the generic error handling and returning of tokens, many edge cases have been taken into account to ensure that proper tokens and errors are returned. 